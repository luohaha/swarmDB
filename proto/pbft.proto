// Copyright (C) 2018 Bluzelle
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License, version 3,
// as published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with this program. If not, see <http://www.gnu.org/licenses/>.

syntax = "proto3";

import "database.proto";

message pbft_msg
{
    pbft_msg_type type = 1;

    // used for preprepare, prepare, commit
    uint64 view = 2;
    // used for preprepare, prepare, commit, checkpoint
    uint64 sequence = 3;

    // used for preprepare, prepare, commit, request
    // TODO: Most messages should contain only the hash of the request - KEP-344
    pbft_request request = 4;

    // Needed for prepare, commit, request, checkpoint, but included always for clarity. This is the sender's uuid.
    string sender = 5;

    // for checkpoints
    string state_hash = 6;

    // for join/leave requests
    pbft_peer_info peer_info = 7;
}

enum pbft_msg_type {
    PBFT_MSG_UNDEFINED = 0;
    PBFT_MSG_REQUEST = 1;
    PBFT_MSG_PREPREPARE = 2;
    PBFT_MSG_PREPARE = 3;
    PBFT_MSG_COMMIT = 4;
    PBFT_MSG_CHECKPOINT = 5;
    PBFT_MSG_JOIN = 6;
    PBFT_MSG_LEAVE = 7;
}

message pbft_request
{
    pbft_request_type type = 1;
    oneof msg
    {
        database_msg operation = 2;
        pbft_internal_msg command = 3;
    }
    uint64 timestamp = 4;
    string client = 5;
}

enum pbft_internal_msg_type {
    PBFT_IMSG_UNDEFINED = 0;
    PBFT_IMSG_NEW_CONFIG = 1;
}

enum pbft_request_type {
    PBFT_REQ_UNDEFINED = 0;
    PBFT_REQ_DATABASE = 1;
    PBFT_REQ_INTERNAL = 2;
}

message pbft_internal_msg
{
    pbft_internal_msg_type type = 1;

    // for new_config
    string configuration = 2;
}

message pbft_peer_info
{
    string host = 1;
    uint32 port = 2;
    uint32 http_port = 3;
    string name = 4;
    string uuid = 5;
}
